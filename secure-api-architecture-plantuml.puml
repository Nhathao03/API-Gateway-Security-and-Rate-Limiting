@startuml SecureAPIArchitecture
!theme plain
skinparam backgroundColor white
skinparam componentStyle rectangle

title Secure API Gateway Architecture

' Client Layer
actor "Mobile/Web Client" as Client
component "Developer Portal" as DevPortal

' Security & CDN Layer
cloud "Amazon CloudFront" as CloudFront {
  component "CDN + SSL" as CDN
}
component "AWS WAF" as WAF
component "AWS Shield" as Shield

' API Gateway
component "Amazon API Gateway" as APIGW {
  component "Rate Limiting" as RateLimit
  component "Throttling" as Throttle
  component "Request Validation" as Validation
}

' Auth Layer
component "Amazon Cognito" as Cognito {
  component "User Pools" as UserPools
  component "Identity Pools" as IdentityPools
}
component "Lambda Authorizer" as LambdaAuth

' Backend Services
component "AWS Lambda" as Lambda {
  component "Business Logic" as BusinessLogic
}
database "Amazon DynamoDB" as DynamoDB
database "Aurora Serverless" as Aurora
storage "Amazon S3" as S3

' Monitoring
component "Amazon CloudWatch" as CloudWatch {
  component "Metrics" as Metrics
  component "Logs" as Logs
  component "Alarms" as Alarms
}
component "AWS X-Ray" as XRay

' Documentation
component "API Documentation" as APIDocs
component "Auto-generated SDKs" as SDKs

' Request Flow
Client --> CloudFront : HTTPS Request
DevPortal --> APIDocs
DevPortal --> SDKs

CloudFront --> WAF : Filtered Request
WAF --> Shield : Security Check
Shield --> APIGW : Clean Request

APIGW --> Cognito : Auth Token
APIGW --> LambdaAuth : Custom Auth
LambdaAuth --> Cognito : Validate

APIGW --> Lambda : Authorized Request
Lambda --> DynamoDB : Query Data
Lambda --> Aurora : Query Data
Lambda --> S3 : Store/Retrieve

' Monitoring Connections
APIGW ..> CloudWatch : Metrics/Logs
Lambda ..> CloudWatch : Metrics/Logs
Lambda ..> XRay : Tracing
APIGW ..> XRay : Tracing

' Response Flow
Lambda --> APIGW : Response
APIGW --> Shield : Response
Shield --> WAF : Response
WAF --> CloudFront : Response
CloudFront --> Client : Cached Response

@enduml